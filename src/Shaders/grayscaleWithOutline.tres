[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://Art/propBush1.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarInterp" id=1]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -0.01, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeTexture" id=7]
output_port_for_preview = 0
source = 2
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=9]
uniform_name = "OutlineColor"

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 31

[sub_resource type="VisualShaderNodeVectorScalarMix" id=11]

[sub_resource type="VisualShaderNodeTexture" id=12]
output_port_for_preview = 0
source = 2
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeDotProduct" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.299, 0.587, 0.114 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "ColorLevel"

[resource]
code = "shader_type canvas_item;
uniform float ColorLevel;
uniform vec3 OutlineColor;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out2p0.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// DotProduct:4
	vec3 n_in4p1 = vec3(0.29900, 0.58700, 0.11400);
	float n_out4p0 = dot(n_out3p0, n_in4p1);

// ScalarUniform:7
	float n_out7p0 = ColorLevel;

// VectorScalarMix:12
	vec3 n_out12p0 = mix(vec3(n_out4p0), n_out3p0, n_out7p0);

// VectorOp:15
	vec3 n_in15p1 = vec3(0.00000, -0.01000, 0.00000);
	vec3 n_out15p0 = n_out2p0 + n_in15p1;

// Texture:19
	vec3 n_out19p0;
	float n_out19p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out15p0.xy);
		n_out19p0 = _tex_read.rgb;
		n_out19p1 = _tex_read.a;
	}

// ScalarOp:16
	float n_out16p0 = n_out3p1 - n_out19p1;

// VectorUniform:20
	vec3 n_out20p0 = OutlineColor;

// VectorOp:17
	vec3 n_out17p0 = vec3(n_out16p0) * n_out20p0;

// ScalarFunc:21
	float n_out21p0 = 1.0 - n_out7p0;

// VectorScalarMix:22
	vec3 n_in22p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out22p0 = mix(n_in22p0, n_out17p0, n_out21p0);

// VectorOp:18
	vec3 n_out18p0 = n_out12p0 + n_out22p0;

// Output:0
	COLOR.rgb = n_out18p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1080, 400 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -720, 300 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -360, 220 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( 160, 160 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( 300, 340 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 520, 460 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 500, 240 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( -560, 620 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( 80, 640 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( 420, 680 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( 820, 320 )
nodes/fragment/19/node = SubResource( 7 )
nodes/fragment/19/position = Vector2( -360, 580 )
nodes/fragment/20/node = SubResource( 9 )
nodes/fragment/20/position = Vector2( 80, 840 )
nodes/fragment/21/node = SubResource( 10 )
nodes/fragment/21/position = Vector2( 400, 600 )
nodes/fragment/22/node = SubResource( 11 )
nodes/fragment/22/position = Vector2( 740, 660 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 3, 0, 7, 0, 11, 2, 7, 0, 12, 2, 4, 0, 12, 0, 3, 1, 11, 0, 3, 0, 12, 1, 3, 0, 4, 0, 2, 0, 3, 0, 7, 0, 12, 2, 4, 0, 12, 0, 3, 0, 12, 1, 2, 0, 15, 0, 3, 1, 16, 0, 11, 0, 0, 1, 3, 1, 0, 1, 16, 0, 17, 0, 12, 0, 18, 0, 19, 1, 16, 1, 15, 0, 19, 0, 18, 0, 0, 0, 7, 0, 21, 0, 21, 0, 22, 2, 22, 0, 18, 1, 17, 0, 22, 1, 20, 0, 17, 1 )
